@page "/Admin/Create"
@inject NavigationManager NavManager

<EditForm Model="@product" OnValidSubmit="@CreateProduct">
    <DataAnnotationsValidator />
    <h4>Create new product</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <div class="text-danger"></div>
            <div class="form-group">
                <label class="control-label">Product name</label>
                <input @bind="product.Name" required class="form-control" />
            </div>
            <div class="form-group">
                <label class="control-label">Price</label>
                <input @bind="product.Price" required class="form-control" />
            </div>
            <div class="form-group">
                <label>Manufacturer</label>
                <select @bind="product.ManufacturerId" required class="form-control">
                    <option value="" disabled>Choose a manufacturer</option>
                    @foreach (var item in manufacturers)
                    {
                        <option value="@item.ManufacturerId">@item.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label>Category</label>
                <select @bind="product.CategoryId" required class="form-control">
                    <option value="" disabled>Choose a category</option>
                    @foreach (var item in categories)
                    {
                        <option value="@item.CategoryId">@item.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </div>
    </div>
</EditForm>


<div>
    <a href="Admin/AdminIndex">Back to List</a>
</div>

@code {
    private Product product = new Product();

    private List<Manufacturer> manufacturers;

    private List<Category> categories;

    protected override void OnInitialized()
    {
        manufacturers = _ProductService.GetManufacturers().ToList();
        categories = _ProductService.GetCategories().ToList();
    }

    private async Task CreateProduct()
    {
        await _ProductService.CreateProduct(product);

        StateHasChanged();

        NavManager.NavigateTo("/Admin/AdminIndex");
    }
}
